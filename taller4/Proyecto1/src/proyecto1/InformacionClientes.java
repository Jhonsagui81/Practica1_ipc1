package proyecto1;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class InformacionClientes extends javax.swing.JInternalFrame {
    //tablas
    DefaultTableModel dtm = new DefaultTableModel();
    DefaultTableModel dtm1 = new DefaultTableModel();

    //arreglo de clientes
    Clientes[] infoPersona = new Clientes[5];

    //Constructor de la ventana
    public InformacionClientes(Clientes[] personas) {
        this.infoPersona = personas;
        initComponents();

        // para tabla de informacion cliente
        String[] titulo = new String[]{"CUI", "NOMBRE", "APELLIDO"};
        dtm.setColumnIdentifiers(titulo);
        tb1Datos.setModel(dtm);
        //metodo ingresa informacion a la tabla
        agregarInfo();

        //para tabla de informacion cuenta asociada
        String[] title = new String[]{"Cuentas Asociadas"};
        dtm1.setColumnIdentifiers(title);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        txtIdBuscar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btmBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb2Datos = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb1Datos = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Informacion de Clientes");

        jLabel1.setText("BUSCADOR DE CUENTAS ASOCIADAS:");

        jLabel2.setText("INGRESE CUI");

        btmBuscar.setText("BUSCAR");
        btmBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmBuscarActionPerformed(evt);
            }
        });

        tb2Datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Cuenta Asociada"
            }
        ));
        jScrollPane2.setViewportView(tb2Datos);

        tb1Datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tb1Datos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(93, 93, 93)
                                    .addComponent(jLabel2))
                                .addComponent(btmBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtIdBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(70, 70, 70)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(432, 432, 432)
                        .addComponent(jLabel1)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btmBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //PARA AGREGAR DATOS A LA TABLA DE INFORMACION
    public void agregarInfo() {
        for (int i = 0; i < infoPersona.length; i++) {
            if (infoPersona[i].getNombre() != null) {
                dtm.addRow(new Object[]{
                    infoPersona[i].getDPI(), infoPersona[i].getNombre(), infoPersona[i].getApellido()
                });
            }
        } // finaliza el for

    }

    //Metodo para mostrar informacion en la tabla de busqueda
    public void AgregarInfoBusqueda(int per) { //parametro para tener fijada a la persona que veremos sus cuentas
        tb2Datos.setModel(dtm1);
        for (int i = 0; i < infoPersona.length; i++) {
            if (infoPersona[per].cuentaAsociada[i].getIdCuenta() != 0) { // valido que el id no sea 0 (cuenta no existente o asignada)
                dtm1.addRow(new Object[]{
                    infoPersona[per].cuentaAsociada[i].getIdCuenta()
                });
            }
        }
    }

    private void btmBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmBuscarActionPerformed
        if (!txtIdBuscar.getText().isEmpty()) {
            //Para limpiar la tabla
            try {
                int ContadorCoincidencia = 0;
                int filas = dtm1.getRowCount();
                for (int i = 0; i < filas; i++) {
                    dtm1.removeRow(0);
                }

                // para validar el valor a buscar 
                String datoBuscar = txtIdBuscar.getText();
                int dpi = Integer.parseInt(datoBuscar);

                //buscar coincidencias
                for (int i = 0; i < infoPersona.length; i++) {
                    if (dpi == 0) {
                        ContadorCoincidencia++;
                    } else if (infoPersona[i].getDPI() == dpi) {
                        AgregarInfoBusqueda(i);
                        ContadorCoincidencia = (i + 1);
                    }
                }
                // si la busqueda no encuentra coincidencias
                if (ContadorCoincidencia == 0) {
                    JOptionPane.showMessageDialog(null, "No se encontraron Coincidencias");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "¡Ingrese los datos como lo indica el manual de usuario!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "¡Debe rellenar todos los campos!");
        }

    }//GEN-LAST:event_btmBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btmBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tb1Datos;
    private javax.swing.JTable tb2Datos;
    private javax.swing.JTextField txtIdBuscar;
    // End of variables declaration//GEN-END:variables
}
